warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
  --> common/src/main_cli.rs:24:18
   |
24 |                 .multiple_occurrences(true)
   |                  ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(deprecated)]` on by default

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
  --> common/src/main_cli.rs:31:18
   |
31 |                 .multiple_occurrences(false)
   |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
  --> common/src/main_cli.rs:41:18
   |
41 |                 .multiple_occurrences(false)
   |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
  --> common/src/main_cli.rs:48:18
   |
48 |                 .multiple_occurrences(false)
   |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
  --> common/src/main_cli.rs:57:18
   |
57 |                 .multiple_occurrences(false)
   |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
  --> common/src/main_cli.rs:65:18
   |
65 |                 .multiple_occurrences(false)
   |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
  --> common/src/main_cli.rs:75:18
   |
75 |                 .multiple_occurrences(false)
   |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
  --> common/src/main_cli.rs:86:18
   |
86 |                 .multiple_occurrences(false)
   |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:100:18
    |
100 |                 .multiple_occurrences(false)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:111:18
    |
111 |                 .multiple_occurrences(false)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:122:18
    |
122 |                 .multiple_occurrences(false)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:133:18
    |
133 |                 .multiple_occurrences(false)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:144:18
    |
144 |                 .multiple_occurrences(false)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:155:18
    |
155 |                 .multiple_occurrences(false)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:168:18
    |
168 |                 .multiple_occurrences(false)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:179:18
    |
179 |                 .multiple_occurrences(false)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:190:18
    |
190 |                 .multiple_occurrences(false)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:203:18
    |
203 |                 .multiple_occurrences(false)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:214:18
    |
214 |                 .multiple_occurrences(false)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:225:18
    |
225 |                 .multiple_occurrences(false)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:236:18
    |
236 |                 .multiple_occurrences(false)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:247:18
    |
247 |                 .multiple_occurrences(false)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:257:18
    |
257 |                 .multiple_occurrences(false)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:268:18
    |
268 |                 .multiple_occurrences(false)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:278:18
    |
278 |                 .multiple_occurrences(false)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::validator`: Replaced with `Arg::value_parser(...)`

         Derive: replace `#[clap(validator = <fn>)]` with `#[clap(value_parser = <fn>)]`

         Builder: replace `arg.validator(<fn>)` with `arg.value_parser(<fn>)` and `matches.value_of` with
         `matches.get_one::<T>` or `matches.values_of` with `matches.get_many::<T>`
   --> common/src/main_cli.rs:281:18
    |
281 |                 .validator(genre_number_validator).help_heading(tags_name)
    |                  ^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:290:18
    |
290 |                 .multiple_occurrences(false)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:300:18
    |
300 |                 .multiple_occurrences(false)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:310:18
    |
310 |                 .multiple_occurrences(false)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:320:18
    |
320 |                 .multiple_occurrences(false)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:330:18
    |
330 |                 .multiple_occurrences(true)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:340:18
    |
340 |                 .multiple_occurrences(true)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:351:18
    |
351 |                 .multiple_occurrences(true)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:362:18
    |
362 |                 .multiple_occurrences(false)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:371:18
    |
371 |                 .multiple_occurrences(true)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
   --> common/src/main_cli.rs:381:18
    |
381 |                 .multiple_occurrences(false)
    |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::validator`: Replaced with `Arg::value_parser(...)`

         Derive: replace `#[clap(validator = <fn>)]` with `#[clap(value_parser = <fn>)]`

         Builder: replace `arg.validator(<fn>)` with `arg.value_parser(<fn>)` and `matches.value_of` with
         `matches.get_one::<T>` or `matches.values_of` with `matches.get_many::<T>`
   --> common/src/main_cli.rs:384:18
    |
384 |                 .validator(crate::shared::validate_file_rename_pattern)
    |                  ^^^^^^^^^

warning: `common` (lib) generated 37 warnings
warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
  --> id3show/src/build_cli.rs:14:18
   |
14 |                 .multiple_occurrences(true),
   |                  ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(deprecated)]` on by default

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
  --> id3show/src/build_cli.rs:20:18
   |
20 |                 .multiple_occurrences(false)
   |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
  --> id3show/src/build_cli.rs:28:18
   |
28 |                 .multiple_occurrences(false)
   |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::Arg::<'help>::multiple_occurrences`: Replaced with `Arg::action` (Issue #3772)

         Builder: replace `arg.multiple_occurrences(true)` with `arg.action(ArgAction::Append)` when taking a value and `arg.action(ArgAction::Count)` with `matches.get_count` when not
  --> id3show/src/build_cli.rs:38:18
   |
38 |                 .multiple_occurrences(false)
   |                  ^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
  --> id3show/src/main.rs:24:10
   |
24 |         .value_of("log-config-file")
   |          ^^^^^^^^

warning: use of deprecated associated function `clap::ArgMatches::values_of`: Replaced with `ArgMatches::get_many()`
  --> id3show/src/main.rs:35:30
   |
35 |     for filename in cli_args.values_of("files").unwrap_or_default() {
   |                              ^^^^^^^^^

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
  --> id3show/src/main.rs:40:32
   |
40 |     let show_detail = cli_args.is_present("show-detail");
   |                                ^^^^^^^^^^

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
  --> id3show/src/main.rs:41:34
   |
41 |     let print_summary = cli_args.is_present("print-summary");
   |                                  ^^^^^^^^^^

warning: `id3show` (bin "id3show") generated 8 warnings
warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/default_values.rs:134:21
    |
134 |         if cli_args.is_present("config-file") {
    |                     ^^^^^^^^^^
    |
    = note: `#[warn(deprecated)]` on by default

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
   --> id3tag/src/default_values.rs:137:22
    |
137 |                     .value_of("config-file")
    |                      ^^^^^^^^

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/default_values.rs:208:17
    |
208 |         if args.is_present("rename-file") {
    |                 ^^^^^^^^^^

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
   --> id3tag/src/default_values.rs:209:32
    |
209 |             let pattern = args.value_of("rename-file").unwrap_or_default();
    |                                ^^^^^^^^

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/default_values.rs:221:17
    |
221 |         if args.is_present("stop-on-error") {
    |                 ^^^^^^^^^^

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/default_values.rs:231:17
    |
231 |         if args.is_present("print-summary") {
    |                 ^^^^^^^^^^

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/default_values.rs:241:17
    |
241 |         if args.is_present("detail-off") {
    |                 ^^^^^^^^^^

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/default_values.rs:251:17
    |
251 |         if args.is_present("dry-run") {
    |                 ^^^^^^^^^^

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/default_values.rs:261:17
    |
261 |         if args.is_present("single-thread") {
    |                 ^^^^^^^^^^

warning: use of deprecated associated function `clap::ArgMatches::values_of`: Replaced with `ArgMatches::get_many()`
   --> id3tag/src/default_values.rs:272:37
    |
272 |         if let Some(folders) = args.values_of("picture-search-folder") {
    |                                     ^^^^^^^^^

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
   --> id3tag/src/default_values.rs:284:34
    |
284 |         if let Some(size) = args.value_of("picture-max-size") {
    |                                  ^^^^^^^^

warning: use of deprecated associated function `clap::ArgMatches::values_of`: Replaced with `ArgMatches::get_many()`
   --> id3tag/src/default_values.rs:294:40
    |
294 |         if let Some(candidates) = args.values_of("picture-front-candidate") {
    |                                        ^^^^^^^^^

warning: use of deprecated associated function `clap::ArgMatches::values_of`: Replaced with `ArgMatches::get_many()`
   --> id3tag/src/default_values.rs:307:40
    |
307 |         if let Some(candidates) = args.values_of("picture-back-candidate") {
    |                                        ^^^^^^^^^

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:100:17
    |
100 |         if $cli.is_present("track-album-artist") {
    |                 ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:117:5
    |
117 |     track_album_artist!(cli, dv, nt, ot);
    |     ------------------------------------ in this macro invocation
    |
    = note: this warning originates in the macro `track_album_artist` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
   --> id3tag/src/formats/tag_macros.rs:102:18
    |
102 |                 .value_of("track-album-artist")
    |                  ^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:117:5
    |
117 |     track_album_artist!(cli, dv, nt, ot);
    |     ------------------------------------ in this macro invocation
    |
    = note: this warning originates in the macro `track_album_artist` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:107:24
    |
107 |         } else if $cli.is_present("config-file") {
    |                        ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:117:5
    |
117 |     track_album_artist!(cli, dv, nt, ot);
    |     ------------------------------------ in this macro invocation
    |
    = note: this warning originates in the macro `track_album_artist` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:24:17
    |
24  |         if $cli.is_present($arg) {
    |                 ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:122:5
    |
122 |     tag!(cli, dv, nt, ot, "album-artist", album_artist, false);
    |     ---------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
   --> id3tag/src/formats/tag_macros.rs:25:39
    |
25  |             $nt.insert($t.$name, $cli.value_of($arg).unwrap_or("").to_string());
    |                                       ^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:122:5
    |
122 |     tag!(cli, dv, nt, ot, "album-artist", album_artist, false);
    |     ---------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:26:24
    |
26  |         } else if $cli.is_present("config-file") {
    |                        ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:122:5
    |
122 |     tag!(cli, dv, nt, ot, "album-artist", album_artist, false);
    |     ---------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:24:17
    |
24  |         if $cli.is_present($arg) {
    |                 ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:123:5
    |
123 |     tag!(cli, dv, nt, ot, "track-artist", track_artist, false);
    |     ---------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
   --> id3tag/src/formats/tag_macros.rs:25:39
    |
25  |             $nt.insert($t.$name, $cli.value_of($arg).unwrap_or("").to_string());
    |                                       ^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:123:5
    |
123 |     tag!(cli, dv, nt, ot, "track-artist", track_artist, false);
    |     ---------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:26:24
    |
26  |         } else if $cli.is_present("config-file") {
    |                        ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:123:5
    |
123 |     tag!(cli, dv, nt, ot, "track-artist", track_artist, false);
    |     ---------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:24:17
    |
24  |           if $cli.is_present($arg) {
    |                   ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:124:5
    |
124 | /     tag!(
125 | |         cli,
126 | |         dv,
127 | |         nt,
...   |
131 | |         false
132 | |     );
    | |_____- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
   --> id3tag/src/formats/tag_macros.rs:25:39
    |
25  |               $nt.insert($t.$name, $cli.value_of($arg).unwrap_or("").to_string());
    |                                         ^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:124:5
    |
124 | /     tag!(
125 | |         cli,
126 | |         dv,
127 | |         nt,
...   |
131 | |         false
132 | |     );
    | |_____- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:26:24
    |
26  |           } else if $cli.is_present("config-file") {
    |                          ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:124:5
    |
124 | /     tag!(
125 | |         cli,
126 | |         dv,
127 | |         nt,
...   |
131 | |         false
132 | |     );
    | |_____- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:24:17
    |
24  |         if $cli.is_present($arg) {
    |                 ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:133:5
    |
133 |     tag!(cli, dv, nt, ot, "album-title", album_title, false);
    |     -------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
   --> id3tag/src/formats/tag_macros.rs:25:39
    |
25  |             $nt.insert($t.$name, $cli.value_of($arg).unwrap_or("").to_string());
    |                                       ^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:133:5
    |
133 |     tag!(cli, dv, nt, ot, "album-title", album_title, false);
    |     -------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:26:24
    |
26  |         } else if $cli.is_present("config-file") {
    |                        ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:133:5
    |
133 |     tag!(cli, dv, nt, ot, "album-title", album_title, false);
    |     -------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:24:17
    |
24  |         if $cli.is_present($arg) {
    |                 ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:134:5
    |
134 |     tag!(cli, dv, nt, ot, "album-title-sort", album_title_sort, false);
    |     ------------------------------------------------------------------ in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
   --> id3tag/src/formats/tag_macros.rs:25:39
    |
25  |             $nt.insert($t.$name, $cli.value_of($arg).unwrap_or("").to_string());
    |                                       ^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:134:5
    |
134 |     tag!(cli, dv, nt, ot, "album-title-sort", album_title_sort, false);
    |     ------------------------------------------------------------------ in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:26:24
    |
26  |         } else if $cli.is_present("config-file") {
    |                        ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:134:5
    |
134 |     tag!(cli, dv, nt, ot, "album-title-sort", album_title_sort, false);
    |     ------------------------------------------------------------------ in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:33:17
    |
33  |         if $cli.is_present($arg) {
    |                 ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:135:5
    |
135 |     tag!(cli, dv, nt, ot, "disc-number", disc_number, true);
    |     ------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
   --> id3tag/src/formats/tag_macros.rs:36:22
    |
36  |                 $cli.value_of($arg).unwrap_or("").to_string(),
    |                      ^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:135:5
    |
135 |     tag!(cli, dv, nt, ot, "disc-number", disc_number, true);
    |     ------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:38:24
    |
38  |         } else if $cli.is_present("config-file") {
    |                        ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:135:5
    |
135 |     tag!(cli, dv, nt, ot, "disc-number", disc_number, true);
    |     ------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:33:17
    |
33  |         if $cli.is_present($arg) {
    |                 ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:136:5
    |
136 |     tag!(cli, dv, nt, ot, "disc-total", disc_number_total, true);
    |     ------------------------------------------------------------ in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
   --> id3tag/src/formats/tag_macros.rs:36:22
    |
36  |                 $cli.value_of($arg).unwrap_or("").to_string(),
    |                      ^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:136:5
    |
136 |     tag!(cli, dv, nt, ot, "disc-total", disc_number_total, true);
    |     ------------------------------------------------------------ in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:38:24
    |
38  |         } else if $cli.is_present("config-file") {
    |                        ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:136:5
    |
136 |     tag!(cli, dv, nt, ot, "disc-total", disc_number_total, true);
    |     ------------------------------------------------------------ in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:24:17
    |
24  |           if $cli.is_present($arg) {
    |                   ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:137:5
    |
137 | /     tag!(
138 | |         cli,
139 | |         dv,
140 | |         nt,
...   |
144 | |         false
145 | |     );
    | |_____- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
   --> id3tag/src/formats/tag_macros.rs:25:39
    |
25  |               $nt.insert($t.$name, $cli.value_of($arg).unwrap_or("").to_string());
    |                                         ^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:137:5
    |
137 | /     tag!(
138 | |         cli,
139 | |         dv,
140 | |         nt,
...   |
144 | |         false
145 | |     );
    | |_____- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:26:24
    |
26  |           } else if $cli.is_present("config-file") {
    |                          ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:137:5
    |
137 | /     tag!(
138 | |         cli,
139 | |         dv,
140 | |         nt,
...   |
144 | |         false
145 | |     );
    | |_____- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:24:17
    |
24  |         if $cli.is_present($arg) {
    |                 ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:146:5
    |
146 |     tag!(cli, dv, nt, ot, "track-title", track_title, false);
    |     -------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
   --> id3tag/src/formats/tag_macros.rs:25:39
    |
25  |             $nt.insert($t.$name, $cli.value_of($arg).unwrap_or("").to_string());
    |                                       ^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:146:5
    |
146 |     tag!(cli, dv, nt, ot, "track-title", track_title, false);
    |     -------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:26:24
    |
26  |         } else if $cli.is_present("config-file") {
    |                        ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:146:5
    |
146 |     tag!(cli, dv, nt, ot, "track-title", track_title, false);
    |     -------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:24:17
    |
24  |         if $cli.is_present($arg) {
    |                 ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:147:5
    |
147 |     tag!(cli, dv, nt, ot, "track-title-sort", track_title_sort, false);
    |     ------------------------------------------------------------------ in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
   --> id3tag/src/formats/tag_macros.rs:25:39
    |
25  |             $nt.insert($t.$name, $cli.value_of($arg).unwrap_or("").to_string());
    |                                       ^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:147:5
    |
147 |     tag!(cli, dv, nt, ot, "track-title-sort", track_title_sort, false);
    |     ------------------------------------------------------------------ in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:26:24
    |
26  |         } else if $cli.is_present("config-file") {
    |                        ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:147:5
    |
147 |     tag!(cli, dv, nt, ot, "track-title-sort", track_title_sort, false);
    |     ------------------------------------------------------------------ in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:24:17
    |
24  |         if $cli.is_present($arg) {
    |                 ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:148:5
    |
148 |     tag!(cli, dv, nt, ot, "track-number", track_number, false);
    |     ---------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
   --> id3tag/src/formats/tag_macros.rs:25:39
    |
25  |             $nt.insert($t.$name, $cli.value_of($arg).unwrap_or("").to_string());
    |                                       ^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:148:5
    |
148 |     tag!(cli, dv, nt, ot, "track-number", track_number, false);
    |     ---------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:26:24
    |
26  |         } else if $cli.is_present("config-file") {
    |                        ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:148:5
    |
148 |     tag!(cli, dv, nt, ot, "track-number", track_number, false);
    |     ---------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:33:17
    |
33  |         if $cli.is_present($arg) {
    |                 ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:149:5
    |
149 |     tag!(cli, dv, nt, ot, "track-total", track_number_total, true);
    |     -------------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
   --> id3tag/src/formats/tag_macros.rs:36:22
    |
36  |                 $cli.value_of($arg).unwrap_or("").to_string(),
    |                      ^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:149:5
    |
149 |     tag!(cli, dv, nt, ot, "track-total", track_number_total, true);
    |     -------------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:38:24
    |
38  |         } else if $cli.is_present("config-file") {
    |                        ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:149:5
    |
149 |     tag!(cli, dv, nt, ot, "track-total", track_number_total, true);
    |     -------------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:33:17
    |
33  |         if $cli.is_present($arg) {
    |                 ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:150:5
    |
150 |     tag!(cli, dv, nt, ot, "track-genre", track_genre, true);
    |     ------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
   --> id3tag/src/formats/tag_macros.rs:36:22
    |
36  |                 $cli.value_of($arg).unwrap_or("").to_string(),
    |                      ^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:150:5
    |
150 |     tag!(cli, dv, nt, ot, "track-genre", track_genre, true);
    |     ------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:38:24
    |
38  |         } else if $cli.is_present("config-file") {
    |                        ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:150:5
    |
150 |     tag!(cli, dv, nt, ot, "track-genre", track_genre, true);
    |     ------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:24:17
    |
24  |         if $cli.is_present($arg) {
    |                 ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:151:5
    |
151 |     tag!(cli, dv, nt, ot, "track-composer", track_composer, false);
    |     -------------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
   --> id3tag/src/formats/tag_macros.rs:25:39
    |
25  |             $nt.insert($t.$name, $cli.value_of($arg).unwrap_or("").to_string());
    |                                       ^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:151:5
    |
151 |     tag!(cli, dv, nt, ot, "track-composer", track_composer, false);
    |     -------------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:26:24
    |
26  |         } else if $cli.is_present("config-file") {
    |                        ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:151:5
    |
151 |     tag!(cli, dv, nt, ot, "track-composer", track_composer, false);
    |     -------------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:24:17
    |
24  |           if $cli.is_present($arg) {
    |                   ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:152:5
    |
152 | /     tag!(
153 | |         cli,
154 | |         dv,
155 | |         nt,
...   |
159 | |         false
160 | |     );
    | |_____- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
   --> id3tag/src/formats/tag_macros.rs:25:39
    |
25  |               $nt.insert($t.$name, $cli.value_of($arg).unwrap_or("").to_string());
    |                                         ^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:152:5
    |
152 | /     tag!(
153 | |         cli,
154 | |         dv,
155 | |         nt,
...   |
159 | |         false
160 | |     );
    | |_____- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:26:24
    |
26  |           } else if $cli.is_present("config-file") {
    |                          ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:152:5
    |
152 | /     tag!(
153 | |         cli,
154 | |         dv,
155 | |         nt,
...   |
159 | |         false
160 | |     );
    | |_____- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:24:17
    |
24  |         if $cli.is_present($arg) {
    |                 ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:161:5
    |
161 |     tag!(cli, dv, nt, ot, "track-date", track_date, false);
    |     ------------------------------------------------------ in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
   --> id3tag/src/formats/tag_macros.rs:25:39
    |
25  |             $nt.insert($t.$name, $cli.value_of($arg).unwrap_or("").to_string());
    |                                       ^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:161:5
    |
161 |     tag!(cli, dv, nt, ot, "track-date", track_date, false);
    |     ------------------------------------------------------ in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:26:24
    |
26  |         } else if $cli.is_present("config-file") {
    |                        ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:161:5
    |
161 |     tag!(cli, dv, nt, ot, "track-date", track_date, false);
    |     ------------------------------------------------------ in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:24:17
    |
24  |         if $cli.is_present($arg) {
    |                 ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:162:5
    |
162 |     tag!(cli, dv, nt, ot, "track-comments", track_comments, false);
    |     -------------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
   --> id3tag/src/formats/tag_macros.rs:25:39
    |
25  |             $nt.insert($t.$name, $cli.value_of($arg).unwrap_or("").to_string());
    |                                       ^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:162:5
    |
162 |     tag!(cli, dv, nt, ot, "track-comments", track_comments, false);
    |     -------------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:26:24
    |
26  |         } else if $cli.is_present("config-file") {
    |                        ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:162:5
    |
162 |     tag!(cli, dv, nt, ot, "track-comments", track_comments, false);
    |     -------------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `tag` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:129:17
    |
129 |         if $cli.is_present("disc-number-count")
    |                 ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:164:5
    |
164 |     disc_number_count!(cli, dv, nt, ot, filename);
    |     --------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `disc_number_count` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:130:22
    |
130 |             || ($cli.is_present("config-file") && $cfg.disc_count.unwrap_or(false))
    |                      ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:164:5
    |
164 |     disc_number_count!(cli, dv, nt, ot, filename);
    |     --------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `disc_number_count` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:152:17
    |
152 |         if $cli.is_present("track-count")
    |                 ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:165:5
    |
165 |     track_number_count!(cli, dv, nt, ot, filename);
    |     ---------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `track_number_count` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:153:22
    |
153 |             || ($cli.is_present("config-file") && $cfg.track_count.unwrap_or(false))
    |                      ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:165:5
    |
165 |     track_number_count!(cli, dv, nt, ot, filename);
    |     ---------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `track_number_count` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:172:17
    |
172 |         if $cli.is_present("track-genre-number") {
    |                 ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:166:5
    |
166 |     track_genre_num!(cli, dv, nt, ot);
    |     --------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `track_genre_num` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
   --> id3tag/src/formats/tag_macros.rs:176:26
    |
176 |                     $cli.value_of("track-genre-number")
    |                          ^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:166:5
    |
166 |     track_genre_num!(cli, dv, nt, ot);
    |     --------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `track_genre_num` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:182:24
    |
182 |         } else if $cli.is_present("config-file") {
    |                        ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:166:5
    |
166 |     track_genre_num!(cli, dv, nt, ot);
    |     --------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `track_genre_num` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:58:17
    |
58  |         if $cli.is_present("picture-front-candidate") {
    |                 ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:168:5
    |
168 |     pic!(cli, dv, nt, ot, front);
    |     ---------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `pic` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:66:24
    |
66  |         } else if $cli.is_present("config-file") {
    |                        ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:168:5
    |
168 |     pic!(cli, dv, nt, ot, front);
    |     ---------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `pic` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:73:17
    |
73  |         if $cli.is_present("picture-back-candidate") {
    |                 ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:169:5
    |
169 |     pic!(cli, dv, nt, ot, back);
    |     --------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `pic` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/formats/tag_macros.rs:81:24
    |
81  |         } else if $cli.is_present("config-file") {
    |                        ^^^^^^^^^^
    |
   ::: id3tag/src/formats/mod.rs:169:5
    |
169 |     pic!(cli, dv, nt, ot, back);
    |     --------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `pic` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: use of deprecated associated function `clap::ArgMatches::values_of`: Replaced with `ArgMatches::get_many()`
  --> id3tag/src/main.rs:54:26
   |
54 |     for file in cli_args.values_of("files").unwrap_or_default() {
   |                          ^^^^^^^^^

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
  --> id3tag/src/main.rs:58:17
   |
58 |     if cli_args.is_present("tags") {
   |                 ^^^^^^^^^^

warning: use of deprecated associated function `clap::ArgMatches::values_of`: Replaced with `ArgMatches::get_many()`
  --> id3tag/src/main.rs:59:31
   |
59 |         for value in cli_args.values_of("tags").unwrap_or_default() {
   |                               ^^^^^^^^^

warning: use of deprecated associated function `clap::ArgMatches::values_of`: Replaced with `ArgMatches::get_many()`
  --> id3tag/src/main.rs:67:30
   |
67 |     for filename in cli_args.values_of("files").unwrap_or_default() {
   |                              ^^^^^^^^^

warning: use of deprecated associated function `clap::ArgMatches::is_present`: Replaced with either `ArgAction::SetTrue` or `ArgMatches::contains_id(...)` to avoid confusion over new semantics

         With `ArgAction::SetTrue` becoming the new flag default in clap v4, flags will always be present.
         To make the migration easier, we've renamed this function so people can identify when they actually
         care about an arg being present or if they need to update to the new way to check a flag's
         presence.

         For flags, call `arg.action(ArgAction::SetTrue)` and lookup the value with `matches.get_flag(...)`

         For presence, replace `matches.is_present(...)` with `matches.contains_id(...)`
   --> id3tag/src/main.rs:167:17
    |
167 |     if cli_args.is_present("log-config-file") {
    |                 ^^^^^^^^^^

warning: use of deprecated associated function `clap::ArgMatches::value_of`: Replaced with `ArgMatches::get_one()`

         Replace `m.value_of(...)` with `m.get_one::<String>(...).map(|s| s.as_str())`
   --> id3tag/src/main.rs:169:14
    |
169 |             .value_of("log-config-file")
    |              ^^^^^^^^

warning: `id3tag` (bin "id3tag") generated 84 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 38.31s
